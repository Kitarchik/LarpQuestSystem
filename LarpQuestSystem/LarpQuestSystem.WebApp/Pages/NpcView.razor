@page "/npcs/{NpcId:int}"
@using LarpQuestSystem.Data.Model
@using LarpQuestSystem.WebApp.Components

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IModalService Modal

<h1>НПС</h1>

@if (_npc == null)
{
    <p><em>@_message</em></p>
}
else
{
    <p><em>Имя: @_npc.Name</em></p>
    <p><em>Описание: @_npc.Description</em></p>
    <p><em>Локация: @_npc.Location.Name</em></p>
    <div style="margin-bottom: 10px">
        <button class="btn btn-primary" @onclick="EditNpc">Редактировать НПС</button>
        <button class="btn btn-primary" @onclick="DeleteNpc">Удалить НПС</button>
    </div>
    if (_npc.StartingQuests.Any())
    {
        <p><em>Список выдаваемых квестов</em></p>
        <CascadingValue Value=@startingQuests>
            <QuestsShortTable />
        </CascadingValue>
    }
    if (_npc.EndingQuests.Any())
    {
        <hr/>
        <p><em>Список завершаемых квестов</em></p>
        <CascadingValue Value=@endingQuests>
            <QuestsShortTable />
        </CascadingValue>
    }
}

@code {
    private string _message = "Загрузка...";
    private Npc _npc;
    private List<Quest> startingQuests { get; set; }
    private List<Quest> endingQuests { get; set; }

    [Parameter]
    public int NpcId { get; set; }

    [CascadingParameter(Name = "BaseApiUrl")] protected string BaseApiUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _npc = await Http.GetJsonAsync<Npc>($"{BaseApiUrl}/npcs/{NpcId}");
        startingQuests = _npc.StartingQuests.ToList();
        endingQuests = _npc.EndingQuests.ToList();
    }

    private async Task DeleteNpc()
    {
        if (_npc.StartingQuests.Any() || _npc.EndingQuests.Any())
        {
            var parameters = new ModalParameters();
            parameters.Add("Message", "ЭЭЭ! Он же квестами занимается! Удали сначала квесты.");

            Modal.Show<Notification>("Notification", parameters);
        }
        var response = await Http.DeleteAsync($"{BaseApiUrl}/npcs/{NpcId}");
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/npcs");
        }
        else
        {
            var parameters = new ModalParameters();
            parameters.Add("Message", "Что-то пошло не так.");

            Modal.Show<Notification>("Notification", parameters);
        }
    }

    private void EditNpc()
    {
        NavigationManager.NavigateTo($"/npcs/edit/{NpcId}");
    }

}