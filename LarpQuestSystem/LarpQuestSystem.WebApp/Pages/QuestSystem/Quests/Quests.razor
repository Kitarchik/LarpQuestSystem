@page "/quests"
@attribute [Authorize(Policy = Policies.IsScriptWriter)]

@using LarpQuestSystem.Data.Model.QuestSystem
@using LarpQuestSystem.Data.Model.Security
@using LarpQuestSystem.WebApp.Components.QuestSystem.Quests

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Квесты</h1>

@if (_quests == null)
{
    <p><em>@_message</em></p>
}
else
{
    <CascadingValue Value=@_quests>
        <AuthorizeView Policy="@Policies.IsAdmin">
            <QuestsAddForm OnQuestsChange="ChangeQuests" />
            <br />
            <br />
            <hr />
        </AuthorizeView>
        <h2>Таблица квестов</h2>
        <QuestsShortTable />
    </CascadingValue>
}

@code {
    private List<Quest> _quests { get; set; }
    private string _message = "Загрузка...";

    [CascadingParameter(Name = "BaseApiUrl")] protected string BaseApiUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _quests = await Http.GetJsonAsync<List<Quest>>($"{BaseApiUrl}/quests");
    }

    private void ChangeQuests(List<Quest> quests)
    {
        _quests = quests;
        StateHasChanged();
    }

}
