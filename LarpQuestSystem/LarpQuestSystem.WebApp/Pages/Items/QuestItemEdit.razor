@page "/questItems/edit/{QuestItemId:int}"
@using LarpQuestSystem.Data.Model
@using LarpQuestSystem.WebApp.Components.Utils

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IModalService Modal

<h1>Редактировать квестовый предмет</h1>

@if (_item == null)
{
    <p><em>@_message</em></p>
}
else
{
    <div class="form-group row">
        <label for="txtAmountNeeded" class="col-sm-2 col-form-label">Количество предметов</label>
        <div class="col-sm-10">
            <input type="text" id="txtAmountNeeded" class="form-control" @bind="@_amountNeededString" />
        </div>
    </div>
    <div class="form-group row">
        <label for="txtTechnicalDocument" class="col-sm-2 col-form-label">Технический документ</label>
        <div class="col-sm-10">
            <input type="text" id="txtTechnicalDocument" rows="5" class="form-control" @bind="@_item.TechnicalDocumentForNpc" />
        </div>
    </div>
    <div class="form-group">
        <button class="btn btn-primary" @onclick="@Submit">Сохранить</button>
        <button class="btn btn-primary" @onclick="@Cancel">Отмена</button>
    </div>
}

@code {
    private string _message = "Загрузка...";
    private string _amountNeededString;
    private QuestItem _item;

    [Parameter]
    public int QuestItemId { get; set; }

    [CascadingParameter(Name = "BaseApiUrl")] protected string BaseApiUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _item = await Http.GetJsonAsync<QuestItem>($"{BaseApiUrl}/questItems/{QuestItemId}");
        _amountNeededString = _item.AmountNeeded.ToString();
    }

    protected async Task Submit()
    {
        if (!int.TryParse(_amountNeededString, out int result) || result < 1)
        {
            var parameters = new ModalParameters();
            parameters.Add("Message", "Введите нормальное количество нужныъ предметов. Будьте людьми то.");

            Modal.Show<Notification>("Notification", parameters);
        }
        else
        {
            _item.AmountNeeded = int.Parse(_amountNeededString);
            await Http.PutJsonAsync<QuestItem>($"{BaseApiUrl}/questItems", _item);
            NavigationManager.NavigateTo($"/items");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo($"/items");
    }
}